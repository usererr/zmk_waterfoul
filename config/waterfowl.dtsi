/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <nordic/nrf52840_qiaa.dtsi>
#include "arduino_pro_micro_pins.dtsi"

/ {
    chosen {
        zephyr,display = &st7789v_st7789v_tl019fqv01;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <16>;
        rows = <4>;
// | MX5  | MX4  | MX3  | MX2  | MX1  |                                 | MX1  | MX2  | MX3  | MX4  | MX5  |
// | MX10 | MX9  | MX8  | MX7  | MX6  |                                 | MX6  | MX7  | MX8  | MX9  | MX10 |
// | MX15 | MX14 | MX13 | MX12 | MX11 |                                 | MX11 | MX12 | MX13 | MX14 | MX15 |
// | MX20 | MX19 | MX18 | MX17 | MX16 |                                 | MX16 | MX17 | MX18 | MX19 | MX20 |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)                                 RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)                                 RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)                                 RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4)                                 RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

    };

    left_encoder: encoder_left {    //roller
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
    };

    right_encoder: encoder_right {  //Standard encoder on left half
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <2>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };

    // TODO: RGB node(s)

    &arduino_spi {
        status = "okay";
        cs-gpios = <&arduino_header 16 GPIO_ACTIVE_LOW>;	/* D10 */

        st7789v_st7789v_tl019fqv01: st7789v@0 {
            compatible = "sitronix,st7789v";
            spi-max-frequency = <20000000>;
            reg = <0>;
            cmd-data-gpios = <&arduino_header 15 GPIO_ACTIVE_LOW>;	/* D9 */
            reset-gpios = <&arduino_header 14 GPIO_ACTIVE_LOW>;	/* D8 */
            width = <320>;
            height = <170>;
            x-offset = <0>;
            y-offset = <35>;
            vcom = <0x2b>;
            gctrl = <0x35>;
            vrhs = <0x0f>;
            vdvs = <0x20>;
            mdac = <0x60>;
            gamma = <0x01>;
            colmod = <0x55>;
            lcm = <0x2c>;
            porch-param = [0c 0c 00 33 33];
            cmd2en-param = [5a 69 02 01];
            pwctrl1-param = [52 a1];
            pvgam-param = [D0 00 02 07 0B 1A 31 54 40 29 12 12 12 17];
            nvgam-param = [D0 00 02 07 05 15 2D 44 44 1C 18 16 1C 1D];
            ram-param = [00 F8];
            rgb-param = [CD 08 14];
        };
    };
};